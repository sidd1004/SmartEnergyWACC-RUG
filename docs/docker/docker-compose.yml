version: '3'
services:
  # MONGO DB #
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - '27107:27107'
    networks:
      - mynet

  # CASSANDRA #
  cassandra0:
    image: cassandra
    container_name: cassandra0
    ports:
      - '9042:9042'
      - '7199:7199'
    networks:
      - mynet
  cassandra1:
    image: cassandra
    container_name: cassandra1
    ports:
      - '9142:9042'
    links:
      - 'cassandra0:seed'
    networks:
      - mynet
    environment:
      - CASSANDRA_SEEDS=seed
    labels:
      kompose.service.type: LoadBalancer

  # ZOOKEEPER #
  zookeeper:
    image: confluent/zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - mynet
    restart: on-failure

  # KAFKA #
  kafka:
    image: confluent/kafka
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_CREATE_TOPICS: 'testtopic:1:1'
    networks:
      - mynet
    depends_on:
      - zookeeper
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    restart: on-failure

  # DATA SOURCE GEN #
  input-gen:
    image: 'swastikrug/input-gen:latest'
    container_name: input-gen
    links:
      - cassandra0
    depends_on:
      - cassandra0
      - cassandra1
      - kafka
    networks:
      - mynet
    restart: on-failure

# BACK-END #
  back-end:
    image: 'swastikrug/back-end:latest'
    container_name: back-end
    ports:
      - '9000:9000'
    links:
      - cassandra0
    depends_on:
      - cassandra0
      - cassandra1
      - kafka
    networks:
      - mynet
    restart: on-failure


networks:
  mynet:
    external: true
